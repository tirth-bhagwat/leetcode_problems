#![allow(unused)]
// #![allow(unused_variables)]

mod add_two_numbers;
mod backspace_string_compare;
mod build_array_where_you_can_find_the_maximum_exactly_k_comparisons;
mod calculate_digit_sum_of_a_string;
mod candy;
mod check_if_string_is_a_prefix_of_array;
mod combination_sum_iv;
mod construct_binary_tree_from_preorder_and_inorder_traversal;
mod count_all_valid_pickup_and_delivery_options;
mod counting_bits;
mod data_structures;
mod decoded_string_at_index;
mod decremental_string_concatenation;
mod design_hashmap;
mod extra_characters_in_a_string;
mod find_first_and_last_position_of_element_in_sorted_array;
mod find_pivot_index;
mod find_the_difference;
mod find_the_difference_of_two_arrays;
mod find_the_duplicate_number;
mod find_the_highest_altitude;
mod find_the_town_judge;
mod find_triangular_sum_of_an_array;
mod first_missing_positive;
mod flatten_nested_list_iterator;
mod frog_jump;
mod group_the_people_given_the_group_size_they_belong_to;
mod implement_stack_using_queues;
mod integer_break;
mod integer_to_roman;
mod interleaving_string;
mod knight_dialer;
mod longest_common_prefix;
mod longest_palindromic_substring;
mod majority_element_ii;
mod max_consecutive_ones_iii;
mod maximum_average_subarray_i;
mod maximum_length_of_pair_chain;
mod maximum_number_of_groups_with_increasing_length;
mod maximum_number_of_vowels_in_a_substring_of_given_length;
mod min_cost_to_connect_all_points;
mod min_max_game;
mod minimum_deletions_to_make_character_frequencies_unique;
mod minimum_moves_to_reach_target_score;
mod minimum_penalty_for_a_shop;
mod monotonic_array;
mod number_of_good_pairs;
mod number_of_steps_to_reduce_a_number_in_binary_representation_to_one;
mod number_of_steps_to_reduce_a_number_to_zero;
mod palindromic_substrings;
mod pascals_triangle;
mod pascals_triangle_ii;
mod path_with_minimum_effort;
mod pattern_132;
mod plates_between_candles;
mod reconstruct_itinerary;
mod remove_colored_pieces_if_both_neighbors_are_the_same_color;
mod remove_duplicate_letters;
mod remove_letter_to_equalize_frequency;
mod remove_nth_node_from_end_of_list;
mod reverse_linked_list_ii;
mod reverse_words_in_a_string_iii;
mod roman_to_integer;
mod same_tree;
mod sort_array_by_parity;
mod sort_integers_by_the_number_of_1_bits;
mod split_linked_list_in_parts;
mod the_k_weakest_rows_in_a_matrix;
mod tmp;
mod two_sum_ii_input_array_is_sorted;
mod unique_paths;
mod unique_paths_ii;
mod word_break;
mod find_the_original_array_of_prefix_xor;
mod find_mode_in_binary_search_tree;
mod build_an_array_with_stack_operations;
mod last_moment_before_all_ants_fall_out_of_a_plank;
mod find_the_winner_of_an_array_game;
mod seat_reservation_manager;
mod equal_row_and_column_pairs;
mod eliminate_maximum_number_of_monsters;
mod determine_if_a_cell_is_reachable_at_a_given_time;
mod count_number_of_homogenous_substrings;
mod number_of_substrings_with_only_1s;
mod count_vowel_substrings_of_a_string;
mod restore_the_array_from_adjacent_pairs;
mod design_graph_with_shortest_path_calculator;
mod asteroid_collision;
mod sort_vowels_in_a_string;
mod reduction_operations_to_make_the_array_elements_equal;
mod sum_of_absolute_differences_in_a_sorted_array;
mod lemonade_change;
mod buy_two_chocolates;
mod widest_vertical_area_between_two_points_containing_no_points;
mod html_entity_parser;
mod maximum_score_after_splitting_a_string;
mod path_crossing;
mod strong_password_checker;
mod minimum_changes_to_make_alternating_binary_string;
mod decode_ways;
mod image_smoother;
mod minimum_time_to_make_rope_colorful;
mod string_compression_ii;
mod longest_substring_without_repeating_characters;
mod redistribute_characters_to_make_all_strings_equal;
mod binary_watch;
mod largest_substring_between_two_equal_characters;
mod letter_combinations_of_a_phone_number;
mod assign_cookies;
mod convert_an_array_into_a_2d_array_with_conditions;
mod number_of_laser_beams_in_a_bank;
mod minimum_number_of_operations_to_make_array_empty;
mod maximum_number_of_events_that_can_be_attended;
mod range_sum_of_bst;
mod leaf_similar_trees;
mod amount_of_time_for_binary_tree_to_be_infected;
mod maximum_difference_between_node_and_ancestor;
mod determine_if_string_halves_are_alike;
mod minimum_number_of_steps_to_make_two_strings_anagram;
mod remove_duplicates_from_sorted_array;
mod move_zeroes;
mod best_time_to_buy_and_sell_stock;
mod sort_colors;
mod determine_if_two_strings_are_close;
mod set_matrix_zeroes;
mod find_players_with_zero_or_one_losses;
mod insert_delete_getrandom_o1;
mod two_sum;
mod three_sum;
mod unique_number_of_occurrences;
mod two_sum_iv_input_is_a_bst;
mod four_sum;
mod climbing_stairs;
mod best_time_to_buy_and_sell_stock_ii;
mod minimum_falling_path_sum;
mod minimum_falling_path_sum_ii;
mod sum_of_subarray_minimums;
mod house_robber;
mod set_mismatch;
mod maximum_length_of_a_concatenated_string_with_unique_characters;
mod pseudo_palindromic_paths_in_a_binary_tree;
mod sum_root_to_leaf_numbers;
mod longest_common_subsequence;
mod binary_tree_right_side_view;
mod out_of_boundary_paths;
mod evaluate_reverse_polish_notation;
mod daily_temperatures;
mod divide_array_into_arrays_with_max_difference;
mod sequential_digits;
mod first_unique_character_in_a_string;
mod group_anagrams;
mod sort_characters_by_frequency;
mod perfect_squares;
mod largest_divisible_subset;
mod majority_element;
mod find_first_palindromic_string_in_the_array;
mod rearrange_array_elements_by_sign;
mod find_polygon_with_the_largest_perimeter;

fn main() {
    println!("Hello, world!");
}
